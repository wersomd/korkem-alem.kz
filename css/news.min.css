.news__hashtag{padding:49px 0 402px 46px;font-weight:700;font-size:24px;line-height:16px}.news .today__news{color:#fff;background:url(../img/news/news-bg.png) center center/cover no-repeat;margin-top:67px}.news .today__news-text{padding-left:46px;padding-bottom:45px}.news .today__news-title{background:#007947;display:inline-block;padding:12px 10px;font-weight:700;font-size:24px;line-height:16px;border-radius:10px}.news .today__news-desc{margin-top:10px;font-weight:500;font-size:20px;line-height:1.4;padding-right:170px}.news .pb-0{padding-bottom:0;padding-left:0}.news .clb{color:#000}.news__items,.news__wrapper{display:-webkit-box;display:-ms-flexbox;display:flex}.news__wrapper{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;margin-top:118px}.news__items{margin-top:32px;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-column-gap:40px;-moz-column-gap:40px;column-gap:40px}.news__item{width:360px;margin-bottom:70px}.news__item img{width:100%}.news__info{margin-top:48px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.news__title{max-width:240px;font-size:24px;line-height:26px}.news__date,.news__desc{font-size:16px;line-height:18px}.news__desc{margin-top:25px;line-height:22px}.news__sidebar{margin-left:60px}.news__sidebar__items{margin-top:32px;display:grid;grid-template-columns:minmax(333px,1fr)}.news__sidebar__item{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start;margin-bottom:100px}.news__sidebar__item:last-child{margin-bottom:0}.news__sidebar__item-img{width:120px;height:88px}.news__sidebar__item-img img{max-width:unset;height:100%;-o-object-fit:cover;object-fit:cover}.news__sidebar__item-text{margin-left:24px}.news__sidebar__item-title{font-size:16px;line-height:18px;font-weight:700}.news__sidebar__item-date{margin-top:18px}@supports (-webkit-appearance:none){.news .today__news{background:url(../img/news/news-bg.webp) center center/cover no-repeat}}@media (max-width:1200px){.news__items{-webkit-column-gap:70px;-moz-column-gap:70px;column-gap:70px}.news__item{width:40%}}@media (max-width:1050px){.news__info{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start;row-gap:10px}}@media (max-width:992px){.news__item{width:100%}.news__hashtag{padding-bottom:300px}}@media (max-width:768px){.news .today__news-text{padding-left:30px}.news .today__news-desc{margin-top:20px;font-size:18px;line-height:1.3}.news__hashtag{padding-bottom:200px}.news__wrapper{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;margin-top:60px}.news__items{-webkit-column-gap:30px;-moz-column-gap:30px;column-gap:30px;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.news__item{width:45%}.news__sidebar{margin-left:0}.news__sidebar__items{grid-template-columns:repeat(2,minmax(45%,1fr));-webkit-column-gap:40px;-moz-column-gap:40px;column-gap:40px}.news__sidebar__item:last-child{margin-bottom:100px}}@media (max-width:650px){.news__hashtag{padding-bottom:150px}.news .today__news-text{padding:0 20px 30px}.news .today__news-title{font-size:20%}.news .today__news-desc{padding-right:0}}@media (max-width:594px){.news .today__news-title{font-size:20px}}@media (max-width:576px){.news .today__news-title{font-size:17px;line-height:1.3}.news__sidebar__item{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.news__sidebar__item-text{margin-left:0}.news__sidebar__item-title{margin-top:20px}}@media (max-width:390px){.news__items{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.news__item{width:100%}.news__desc{font-size:14px}}@media (max-width:320px){.news__sidebar__items{grid-template-columns:1fr;margin-top:40px}.news__sidebar__item{margin-bottom:50px}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */